
// #journal-settings
akka.persistence.dynamodb {
  journal {
    class = "akka.persistence.dynamodb.journal.DynamoDBJournal"

    # name of the table to use for events
    table = "event_journal"

    # replay filter not needed for this plugin
    replay-filter.mode = off

  }
}
// #journal-settings

// #snapshot-settings
akka.persistence.dynamodb {
  snapshot {
    class = "akka.persistence.dynamodb.snapshot.DynamoDBSnapshotStore"

    # name of the table to use for snapshots
    table = "snapshot"

    # Enables an optimization in Akka for avoiding snapshot deletes in retention.
    only-one-snapshot = true
  }
}
// #snapshot-settings

// #query-settings
akka.persistence.dynamodb {
  query {
    class = "akka.persistence.dynamodb.query.DynamoDBReadJournalProvider"

    # When live queries return no results or <= 10% of buffer-size, the next query
    # to db will be delayed for this duration.
    # When the number of rows from previous query is >= 90% of buffer-size, the next
    # query will be emitted immediately.
    # Otherwise, between 10% - 90% of buffer-size, the next query will be delayed
    # for half of this duration.
    refresh-interval = 3s

    # Live queries read events up to this duration from the current time.
    behind-current-time = 100 millis

    backtracking {
      enabled = on
      # Backtracking queries will look back for this amount of time. It should
      # not be larger than the akka.projection.dynamodb.offset-store.time-window.
      window = 2 minutes
      # Backtracking queries read events up to this duration from the current time.
      behind-current-time = 10 seconds
    }

    # In-memory buffer holding events when reading from DynamoDB.
    buffer-size = 100
  }
}
// #query-settings

// #client-settings
akka.persistence.dynamodb {
  client {
    host = "localhost"
    port = 8000
  }
}
// #client-settings
